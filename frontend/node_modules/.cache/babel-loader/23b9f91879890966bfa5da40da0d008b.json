{"ast":null,"code":"import e, { useEffect as o, useState as t, useRef as n, useContext as a, useMemo as r } from \"react\";\nimport l from \"react-dom\";\n\nconst i = (e, t, n) => {\n  o(() => {\n    if (!e || !n) return;\n\n    const o = function () {\n      for (var _len = arguments.length, o = new Array(_len), _key = 0; _key < _len; _key++) {\n        o[_key] = arguments[_key];\n      }\n\n      return void 0 === o ? n(e) : n(e, ...o);\n    };\n\n    return kakao.maps.event.addListener(e, t, o), () => {\n      kakao.maps.event.removeListener(e, t, o);\n    };\n  }, [e, t, n]);\n},\n      s = e.createContext(void 0),\n      d = _ref => {\n  let {\n    id: a = \"kakao-map-container\",\n    style: r,\n    children: l,\n    center: d,\n    isPanto: p = !1,\n    padding: c = 32,\n    className: u,\n    disableDoubleClick: k,\n    disableDoubleClickZoom: m,\n    draggable: g,\n    zoomable: v,\n    keyboardShortcuts: w,\n    level: C,\n    maxLevel: y,\n    minLevel: h,\n    mapTypeId: f,\n    projectionId: M,\n    scrollwheel: b,\n    tileAnimation: I,\n    onCreate: x,\n    onBoundsChanged: O,\n    onCenterChanged: L,\n    onClick: z,\n    onDoubleClick: P,\n    onDrag: S,\n    onDragEnd: A,\n    onDragStart: E,\n    onIdle: W,\n    onMaptypeidChanged: D,\n    onMouseMove: R,\n    onRightClick: N,\n    onTileLoaded: Z,\n    onZoomChanged: T,\n    onZoomStart: j\n  } = _ref;\n  const [_, V] = t(),\n        F = n(null);\n  return o(() => {\n    window.kakao ? F.current && kakao.maps.load(() => {\n      const e = \"lat\" in d ? new kakao.maps.LatLng(d.lat, d.lng) : new kakao.maps.Coords(d.x, d.y),\n            o = new kakao.maps.Map(F.current, {\n        center: e,\n        disableDoubleClick: k,\n        disableDoubleClickZoom: m,\n        draggable: g,\n        keyboardShortcuts: w,\n        level: C,\n        mapTypeId: f,\n        projectionId: M,\n        scrollwheel: b,\n        tileAnimation: I\n      });\n      V(o);\n    }) : console.warn(\"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\");\n  }, [k, m, f, I]), o(() => {\n    _ && x && x(_);\n  }, [_, x]), o(() => {\n    if (!_) return;\n\n    let e = _.getCenter();\n\n    e instanceof kakao.maps.Coords && (e = e.toLatLng());\n    const o = \"lat\" in d ? new kakao.maps.LatLng(d.lat, d.lng) : new kakao.maps.Coords(d.x, d.y);\n    o instanceof kakao.maps.LatLng && o.equals(e) || o instanceof kakao.maps.Coords && o.toLatLng().equals(e) || (p ? _.panTo(o, c) : _.setCenter(o));\n  }, [_, d.lat, d.lng, d.x, d.y]), o(() => {\n    _ && void 0 !== g && _.setDraggable(g);\n  }, [_, g]), o(() => {\n    _ && void 0 !== v && _.setZoomable(v);\n  }, [_, v]), o(() => {\n    _ && w && \"boolean\" == typeof w && _.setKeyboardShortcuts(w);\n  }, [_, w]), o(() => {\n    _ && C && _.setLevel(C);\n  }, [_, C]), o(() => {\n    _ && f && _.setMapTypeId(f);\n  }, [_, f]), o(() => {\n    _ && M && _.setProjectionId(M);\n  }, [_, M]), o(() => {\n    _ && y && _.setMaxLevel(y);\n  }, [_, y]), o(() => {\n    _ && h && _.setMinLevel(h);\n  }, [_, h]), i(_, \"bounds_changed\", O), i(_, \"center_changed\", L), i(_, \"click\", z), i(_, \"dblclick\", P), i(_, \"drag\", S), i(_, \"dragstart\", E), i(_, \"dragend\", A), i(_, \"idle\", W), i(_, \"maptypeid_changed\", D), i(_, \"mousemove\", R), i(_, \"rightclick\", N), i(_, \"tilesloaded\", Z), i(_, \"zoom_changed\", T), i(_, \"zoom_start\", j), e.createElement(e.Fragment, null, e.createElement(\"div\", {\n    id: a,\n    style: r,\n    className: u,\n    ref: F\n  }), _ && e.createElement(s.Provider, {\n    value: _\n  }, l));\n},\n      p = e => {\n  const o = a(s);\n  if (!o) throw new Error((e ? e + \" Component\" : \"useMap\") + \" must exist inside Map Component!\");\n  return o;\n},\n      c = _ref2 => {\n  let {\n    id: e,\n    className: t,\n    style: a,\n    map: i,\n    position: s,\n    marker: d,\n    children: p,\n    altitude: c,\n    disableAutoPan: u,\n    range: k,\n    removable: m,\n    zIndex: g,\n    onCreate: v\n  } = _ref2;\n  const w = n(document.createElement(\"div\")),\n        C = r(() => {\n    const e = new kakao.maps.InfoWindow({\n      altitude: c,\n      disableAutoPan: u,\n      range: k,\n      removable: m,\n      zIndex: g,\n      content: w.current,\n      position: s\n    });\n    return w.current.style.whiteSpace = \"nowrap\", e;\n  }, [u, m]);\n  return o(() => (C.open(i, d), () => {\n    C.close();\n  }), [i, d]), o(() => {\n    v && v(C);\n  }, [C, v]), o(() => {\n    C && C.setPosition(s);\n  }, [C, s]), o(() => {\n    C && c && C.setAltitude(c);\n  }, [C, c]), o(() => {\n    C && k && C.setRange(k);\n  }, [C, k]), o(() => {\n    C && g && C.setZIndex(g);\n  }, [C, g]), o(() => {\n    e && (w.current.id = e);\n  }, [e]), o(() => {\n    t && (w.current.className = t);\n  }, [t]), o(() => {\n    if (a) for (const [e, o] of Object.entries(a)) w.current.style[e] = o;\n  }, [a]), l.createPortal(p, w.current);\n},\n      u = e.createContext(void 0),\n      k = _ref3 => {\n  let {\n    children: n,\n    averageCenter: a,\n    calculator: r,\n    clickable: l,\n    disableClickZoom: s,\n    gridSize: d,\n    hoverable: c,\n    minClusterSize: k,\n    minLevel: m,\n    styles: g,\n    texts: v,\n    onClusterclick: w,\n    onClusterdblclick: C,\n    onClustered: y,\n    onClusterout: h,\n    onClusterover: f,\n    onClusterrightclick: M,\n    onCreate: b\n  } = _ref3;\n  const I = p(\"MarkerClusterer\"),\n        [x, O] = t();\n  return o(() => {\n    if (!window.kakao.maps.MarkerClusterer) return void console.warn(\"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\");\n    const e = new kakao.maps.MarkerClusterer({\n      averageCenter: a,\n      calculator: r,\n      clickable: l,\n      disableClickZoom: s,\n      gridSize: d,\n      hoverable: c,\n      minClusterSize: k,\n      minLevel: m,\n      styles: g,\n      texts: v\n    });\n    O(e);\n  }, []), o(() => {\n    null == x || x.setMap(I);\n  }, [I, x]), o(() => {\n    x && b && b(x);\n  }, [x, b]), o(() => {\n    x && d && (x.setGridSize(d), x.redraw());\n  }, [x, d]), o(() => {\n    x && k && (x.setMinClusterSize(k), x.redraw());\n  }, [x, k]), o(() => {\n    x && void 0 !== a && (x.setAverageCenter(a), x.redraw());\n  }, [x, a]), o(() => {\n    x && m && (x.setMinLevel(m), x.redraw());\n  }, [x, m]), o(() => {\n    x && v && (x.setTexts(v), x.redraw());\n  }, [x, v]), o(() => {\n    x && r && (x.setCalculator(r), x.redraw());\n  }, [x, r]), o(() => {\n    x && g && (x.setStyles(g), x.redraw());\n  }, [x, g]), i(x, \"clusterclick\", w), i(x, \"clusterover\", f), i(x, \"clusterout\", h), i(x, \"clusterdblclick\", C), i(x, \"clusterrightclick\", M), i(x, \"clustered\", y), x ? e.createElement(u.Provider, {\n    value: x\n  }, n) : null;\n},\n      m = _ref4 => {\n  let {\n    map: t,\n    position: n,\n    children: l,\n    altitude: s,\n    clickable: d,\n    draggable: p,\n    image: k,\n    infoWindowOptions: m,\n    onCreate: g,\n    onClick: v,\n    onDragEnd: w,\n    onDragStart: C,\n    onMouseOut: y,\n    onMouseOver: h,\n    opacity: f,\n    range: M,\n    title: b,\n    zIndex: I\n  } = _ref4;\n  const x = a(u),\n        O = r(() => new kakao.maps.Marker({\n    altitude: s,\n    clickable: d,\n    draggable: p,\n    image: k,\n    opacity: f,\n    range: M,\n    title: b,\n    zIndex: I,\n    position: n\n  }), []);\n  return o(() => (x ? x.addMarker(O) : O.setMap(t), () => {\n    x ? x.removeMarker(O) : O.setMap(null);\n  }), [t, x, O]), o(() => {\n    g && g(O);\n  }, [O, g]), i(O, \"click\", v), i(O, \"dragstart\", C), i(O, \"dragend\", w), i(O, \"mouseout\", y), i(O, \"mouseover\", h), o(() => {\n    t && O && n && O.setPosition(n);\n  }, [t, O, n]), o(() => {\n    t && O && k && O.setImage(k);\n  }, [t, O, k]), o(() => {\n    t && O && s && O.setAltitude(s);\n  }, [t, O, s]), o(() => {\n    t && O && void 0 !== d && O.setClickable(d);\n  }, [t, O, d]), o(() => {\n    t && O && void 0 !== p && O.setDraggable(p);\n  }, [t, O, p]), o(() => {\n    t && O && f && O.setOpacity(f);\n  }, [t, O, f]), o(() => {\n    t && O && M && O.setRange(M);\n  }, [t, O, M]), o(() => {\n    t && O && b && O.setTitle(b);\n  }, [t, O, b]), o(() => {\n    t && O && I && O.setZIndex(I);\n  }, [t, O, I]), l ? e.createElement(c, {\n    position: n,\n    map: t,\n    marker: O,\n    id: null == m ? void 0 : m.id,\n    className: null == m ? void 0 : m.className,\n    style: null == m ? void 0 : m.style,\n    altitude: null == m ? void 0 : m.altitude,\n    disableAutoPan: null == m ? void 0 : m.disableAutoPan,\n    range: null == m ? void 0 : m.range,\n    removable: null == m ? void 0 : m.removable,\n    zIndex: null == m ? void 0 : m.zIndex\n  }, l) : null;\n},\n      g = _ref5 => {\n  let {\n    image: o,\n    position: t,\n    children: n,\n    clickable: a,\n    draggable: l,\n    infoWindowOptions: i,\n    onClick: s,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: u,\n    onMouseOver: k,\n    onCreate: g,\n    opacity: v,\n    title: w,\n    zIndex: C\n  } = _ref5;\n  const y = p(\"MapMarker\"),\n        h = r(() => {\n    var e, t, n, a, r, l, i, s, d, p, c, u;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (e = o.options) ? void 0 : e.alt,\n      coords: null == (t = o.options) ? void 0 : t.coords,\n      offset: (null == (n = o.options) ? void 0 : n.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (r = o.options) ? void 0 : r.offset.y),\n      shape: null == (l = o.options) ? void 0 : l.shape,\n      spriteOrigin: (null == (i = o.options) ? void 0 : i.spriteOrigin) && new kakao.maps.Point(null == (s = o.options) ? void 0 : s.spriteOrigin.x, null == (d = o.options) ? void 0 : d.spriteOrigin.y),\n      spriteSize: (null == (p = o.options) ? void 0 : p.spriteSize) && new kakao.maps.Size(null == (c = o.options) ? void 0 : c.spriteSize.width, null == (u = o.options) ? void 0 : u.spriteSize.height)\n    });\n  }, [o]),\n        f = r(() => \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : new kakao.maps.Coords(t.x, t.y).toLatLng(), [t.lat, t.lng, t.x, t.y]);\n  return e.createElement(m, {\n    map: y,\n    position: f,\n    image: h,\n    clickable: a,\n    draggable: l,\n    infoWindowOptions: i,\n    onClick: s,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: u,\n    onMouseOver: k,\n    onCreate: g,\n    opacity: v,\n    title: w,\n    zIndex: C\n  }, n);\n},\n      v = _ref6 => {\n  let {\n    id: o,\n    className: t,\n    style: n,\n    position: a,\n    children: l,\n    disableAutoPan: i,\n    removable: s,\n    zIndex: d,\n    onCreate: u\n  } = _ref6;\n  const k = p(\"MapInfoWindow\"),\n        m = r(() => new kakao.maps.LatLng(a.lat, a.lng), [a.lat, a.lng]);\n  return e.createElement(c, {\n    id: o,\n    className: t,\n    style: n,\n    disableAutoPan: i,\n    removable: s,\n    zIndex: d,\n    map: k,\n    position: m,\n    onCreate: u\n  }, l);\n},\n      w = _ref7 => {\n  let {\n    id: e,\n    className: t,\n    style: a,\n    position: i,\n    children: s,\n    clickable: d,\n    xAnchor: c,\n    yAnchor: u,\n    zIndex: k,\n    onCreate: m\n  } = _ref7;\n  const g = p(\"CustomOverlayMap\"),\n        v = n(document.createElement(\"div\")),\n        w = r(() => new kakao.maps.LatLng(i.lat, i.lng), [i.lat, i.lng]),\n        C = r(() => new kakao.maps.CustomOverlay({\n    clickable: d,\n    xAnchor: c,\n    yAnchor: u,\n    zIndex: k,\n    position: w,\n    content: v.current\n  }), [d, c, u]);\n  return o(() => {\n    if (g) return C.setMap(g), () => {\n      C.setMap(null);\n    };\n  }, [g, C]), o(() => {\n    m && m(C);\n  }, [C, m]), o(() => {\n    C.setPosition(w);\n  }, [C, w]), o(() => {\n    k && C.setZIndex(k);\n  }, [C, k]), o(() => {\n    e && (v.current.id = e);\n  }, [e]), o(() => {\n    t && (v.current.className = t);\n  }, [t]), o(() => {\n    if (a) for (const [e, o] of Object.entries(a)) v.current.style[e] = o;\n  }, [a]), l.createPortal(s, v.current);\n},\n      C = _ref8 => {\n  let {\n    position: e = kakao.maps.ControlPosition.TOPRIGHT\n  } = _ref8;\n  const t = p(\"MapTypeControl\"),\n        n = r(() => new kakao.maps.MapTypeControl(), []);\n  return o(() => (t.addControl(n, e), () => {\n    t.removeControl(n);\n  }), [t, e]), null;\n},\n      y = _ref9 => {\n  let {\n    position: e = kakao.maps.ControlPosition.RIGHT\n  } = _ref9;\n  const t = p(\"ZoomControl\"),\n        n = r(() => new kakao.maps.ZoomControl(), []);\n  return o(() => (t.addControl(n, e), () => {\n    t.removeControl(n);\n  }), [t, e]), null;\n},\n      h = _ref10 => {\n  let {\n    type: e\n  } = _ref10;\n  const t = p(\"MapTypeId\");\n  return o(() => (t.addOverlayMapTypeId(e), () => {\n    t.removeOverlayMapTypeId(e);\n  }), [t, e]), null;\n},\n      f = _ref11 => {\n  let {\n    center: e,\n    radius: t,\n    fillColor: n,\n    fillOpacity: a,\n    strokeColor: l,\n    strokeOpacity: s,\n    strokeStyle: d,\n    strokeWeight: c,\n    zIndex: u,\n    onMouseover: k,\n    onMouseout: m,\n    onMousemove: g,\n    onMousedown: v,\n    onClick: w,\n    onCreate: C\n  } = _ref11;\n  const y = p(\"Circle\"),\n        h = r(() => new kakao.maps.LatLng(e.lat, e.lng), [e.lat, e.lng]),\n        f = r(() => new kakao.maps.Circle({\n    center: h,\n    radius: t,\n    fillColor: n,\n    fillOpacity: a,\n    strokeColor: l,\n    strokeOpacity: s,\n    strokeStyle: d,\n    strokeWeight: c,\n    zIndex: u\n  }), []);\n  return o(() => (f.setMap(y), () => {\n    f.setMap(null);\n  }), [y, f]), o(() => {\n    C && C(f);\n  }, [f, C]), o(() => {\n    f && f.setPosition(h);\n  }, [f, h]), o(() => {\n    f.setRadius(t);\n  }, [f, t]), o(() => {\n    u && f.setZIndex(u);\n  }, [f, u]), o(() => {\n    f.setOptions({\n      fillColor: n,\n      fillOpacity: a,\n      strokeColor: l,\n      strokeOpacity: s,\n      strokeStyle: d,\n      strokeWeight: c\n    });\n  }, [f, n, a, l, s, d, c]), i(f, \"mouseover\", k), i(f, \"mouseout\", m), i(f, \"mousemove\", g), i(f, \"mousedown\", v), i(f, \"click\", w), null;\n},\n      M = _ref12 => {\n  let {\n    path: e,\n    endArrow: t,\n    onClick: n,\n    onMousedown: a,\n    onMousemove: l,\n    onMouseout: s,\n    onMouseover: d,\n    onCreate: c,\n    strokeColor: u,\n    strokeOpacity: k,\n    strokeStyle: m,\n    strokeWeight: g,\n    zIndex: v\n  } = _ref12;\n  const w = p(\"Polyline\"),\n        C = r(() => e.every(e => e instanceof Array) ? e.map(e => e.map(e => new kakao.maps.LatLng(e.lat, e.lng))) : e.map(e => new kakao.maps.LatLng(e.lat, e.lng)), [e]),\n        y = r(() => new kakao.maps.Polyline({\n    path: C,\n    endArrow: t,\n    strokeColor: u,\n    strokeOpacity: k,\n    strokeStyle: m,\n    strokeWeight: g,\n    zIndex: v\n  }), []);\n  return o(() => (y.setMap(w), () => y.setMap(null)), [w, y]), o(() => {\n    c && c(y);\n  }, [y, c]), o(() => {\n    y.setOptions({\n      endArrow: t,\n      strokeColor: u,\n      strokeOpacity: k,\n      strokeStyle: m,\n      strokeWeight: g\n    });\n  }, [y, t, u, k, m, g]), o(() => {\n    y.setPath(C);\n  }, [y, C]), o(() => {\n    v && y.setZIndex(v);\n  }, [y, v]), i(y, \"mouseover\", d), i(y, \"mouseout\", s), i(y, \"mousemove\", l), i(y, \"mousedown\", a), i(y, \"click\", n), null;\n},\n      b = _ref13 => {\n  let {\n    path: e,\n    onClick: t,\n    onMousedown: n,\n    onMousemove: a,\n    onMouseout: l,\n    onMouseover: s,\n    onCreate: d,\n    strokeColor: c,\n    strokeOpacity: u,\n    strokeStyle: k,\n    strokeWeight: m,\n    fillColor: g,\n    fillOpacity: v,\n    zIndex: w\n  } = _ref13;\n  const C = p(\"Polygon\"),\n        y = r(() => e.every(e => e instanceof Array) ? e.map(e => e.map(e => new kakao.maps.LatLng(e.lat, e.lng))) : e.map(e => new kakao.maps.LatLng(e.lat, e.lng)), [e]),\n        h = r(() => new kakao.maps.Polygon({\n    path: y,\n    fillColor: g,\n    fillOpacity: v,\n    strokeColor: c,\n    strokeOpacity: u,\n    strokeStyle: k,\n    strokeWeight: m,\n    zIndex: w\n  }), []);\n  return o(() => (h.setMap(C), () => h.setMap(null)), [C, h]), o(() => {\n    d && d(h);\n  }, [h, d]), o(() => {\n    h.setOptions({\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: c,\n      strokeOpacity: u,\n      strokeStyle: k,\n      strokeWeight: m\n    });\n  }, [h, g, v, c, u, k, m]), o(() => {\n    h.setPath(y);\n  }, [h, y]), o(() => {\n    w && h.setZIndex(w);\n  }, [h, w]), i(h, \"mouseover\", s), i(h, \"mouseout\", l), i(h, \"mousemove\", a), i(h, \"mousedown\", n), i(h, \"click\", t), null;\n},\n      I = _ref14 => {\n  let {\n    bounds: e,\n    onClick: t,\n    onMousedown: n,\n    onMousemove: a,\n    onMouseout: l,\n    onMouseover: s,\n    onCreate: d,\n    strokeColor: c,\n    strokeOpacity: u,\n    strokeStyle: k,\n    strokeWeight: m,\n    fillColor: g,\n    fillOpacity: v,\n    zIndex: w\n  } = _ref14;\n  const C = p(\"Rectangle\"),\n        y = r(() => new kakao.maps.LatLngBounds(new kakao.maps.LatLng(e.sw.lat, e.sw.lng), new kakao.maps.LatLng(e.ne.lat, e.ne.lng)), [e]),\n        h = r(() => new kakao.maps.Rectangle({\n    bounds: y,\n    fillColor: g,\n    fillOpacity: v,\n    strokeColor: c,\n    strokeOpacity: u,\n    strokeStyle: k,\n    strokeWeight: m,\n    zIndex: w\n  }), []);\n  return o(() => (h.setMap(C), () => h.setMap(null)), [C, h]), o(() => {\n    d && d(h);\n  }, [h, d]), o(() => {\n    h.setOptions({\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: c,\n      strokeOpacity: u,\n      strokeStyle: k,\n      strokeWeight: m\n    });\n  }, [h, g, v, c, u, k, m]), o(() => {\n    h.setBounds(y);\n  }, [h, y]), o(() => {\n    w && h.setZIndex(w);\n  }, [h, w]), i(h, \"mouseover\", s), i(h, \"mouseout\", l), i(h, \"mousemove\", a), i(h, \"mousedown\", n), i(h, \"click\", t), null;\n},\n      x = _ref15 => {\n  let {\n    center: e,\n    rx: t,\n    ry: n,\n    fillColor: a,\n    fillOpacity: l,\n    strokeColor: s,\n    strokeOpacity: d,\n    strokeStyle: c,\n    strokeWeight: u,\n    zIndex: k,\n    onMouseover: m,\n    onMouseout: g,\n    onMousemove: v,\n    onMousedown: w,\n    onClick: C,\n    onCreate: y\n  } = _ref15;\n  const h = p(\"Ellipse\"),\n        f = r(() => new kakao.maps.LatLng(e.lat, e.lng), [e.lat, e.lng]),\n        M = r(() => new kakao.maps.Ellipse({\n    center: f,\n    rx: t,\n    ry: n,\n    fillColor: a,\n    fillOpacity: l,\n    strokeColor: s,\n    strokeOpacity: d,\n    strokeStyle: c,\n    strokeWeight: u,\n    zIndex: k\n  }), []);\n  return o(() => (M.setMap(h), () => {\n    M.setMap(null);\n  }), [h, M]), o(() => {\n    y && y(M);\n  }, [M, y]), o(() => {\n    M && M.setPosition(f);\n  }, [M, f]), o(() => {\n    M.setRadius(t, n);\n  }, [M, t, n]), o(() => {\n    k && M.setZIndex(k);\n  }, [M, k]), o(() => {\n    M.setOptions({\n      fillColor: a,\n      fillOpacity: l,\n      strokeColor: s,\n      strokeOpacity: d,\n      strokeStyle: c,\n      strokeWeight: u\n    });\n  }, [M, a, l, s, d, c, u]), i(M, \"mouseover\", m), i(M, \"mouseout\", g), i(M, \"mousemove\", v), i(M, \"mousedown\", w), i(M, \"click\", C), null;\n},\n      O = _ref16 => {\n  let {\n    draw: e,\n    onAdd: t,\n    onRemove: n,\n    onCreate: a\n  } = _ref16;\n  const l = p(),\n        i = r(() => {\n    class o extends kakao.maps.AbstractOverlay {\n      constructor(e, o, t) {\n        super(), this.draw = e, this.onAdd = o, this.onRemove = t;\n      }\n\n    }\n\n    return new o(e, t, n);\n  }, [e, t, n]);\n  return o(() => (i.setMap(l), () => {\n    i.setMap(null);\n  }), [l, i]), o(() => {\n    a && a(i);\n  }, [i, a]), null;\n},\n      L = e.createContext(void 0),\n      z = _ref17 => {\n  let {\n    id: a = \"kakao-roadview-container\",\n    style: r,\n    children: l,\n    position: s,\n    className: d,\n    pan: p,\n    panoId: c,\n    panoX: u,\n    panoY: k,\n    tilt: m,\n    zoom: g,\n    onCreate: v,\n    onInit: w,\n    onPanoidChange: C,\n    onPositionChanged: y,\n    onViewpointChange: h,\n    onErrorGetNearestPanoId: f\n  } = _ref17;\n  const [M, b] = t(!0),\n        [I, x] = t(),\n        O = n(null);\n  return o(() => {\n    if (!window.kakao) return void console.warn(\"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\");\n    if (!O.current) return;\n    const e = new kakao.maps.Roadview(O.current, {\n      pan: p,\n      panoId: c,\n      panoX: u,\n      panoY: k,\n      tilt: m,\n      zoom: g\n    });\n    x(e);\n  }, [u, k, g]), o(() => {\n    I && v && v(I);\n  }, [I, v]), o(() => {\n    if (!I || c || I.getPosition().getLat() === s.lat && I.getPosition().getLng() === s.lng) return;\n    const e = new kakao.maps.LatLng(s.lat, s.lng);\n    new kakao.maps.RoadviewClient().getNearestPanoId(e, s.radius, o => {\n      null === o && f ? f(I) : I.setPanoId(o, e);\n    });\n  }, [I, c, s.lat, s.lng, s.radius, f]), o(() => {\n    if (!I || !c || c === I.getPanoId() || I.getPosition().getLat() === s.lat && I.getPosition().getLng() === s.lng) return;\n    const e = new kakao.maps.LatLng(s.lat, s.lng);\n    I.setPanoId(c, e);\n  }, [I, c, s.lat, s.lng]), o(() => {\n    if (!I) return;\n    const e = I.getViewpoint();\n    e.pan === p && e.tilt === m || (p && (e.pan = p), m && (e.tilt = m), I.setViewpoint(e));\n  }, [I, p, m]), i(I, \"init\", e => {\n    b(!1), w && w(e);\n  }), i(I, \"panoid_changed\", C), i(I, \"viewpoint_changed\", h), i(I, \"position_changed\", y), e.createElement(e.Fragment, null, e.createElement(\"div\", {\n    id: a,\n    className: d,\n    style: r,\n    ref: O\n  }), I && !M && e.createElement(L.Provider, {\n    value: I\n  }, l));\n},\n      P = e => {\n  const o = a(L);\n  if (!o) throw new Error((e ? e + \" Component\" : \"useRoadview\") + \" must exist inside Roadview Component!\");\n  return o;\n},\n      S = _ref18 => {\n  let {\n    id: e,\n    className: t,\n    style: a,\n    position: i,\n    children: s,\n    clickable: d,\n    xAnchor: p,\n    yAnchor: c,\n    zIndex: u,\n    altitude: k,\n    range: m,\n    isFocus: g,\n    onCreate: v\n  } = _ref18;\n  const w = P(\"CustomOverlayRoadview\"),\n        C = n(document.createElement(\"div\")),\n        y = r(() => \"lat\" in i ? new kakao.maps.LatLng(i.lat, i.lng) : new kakao.maps.Viewpoint(i.pan, i.tilt, i.zoom, i.panoId), [i.lat, i.lng, i.pan, i.tilt, i.zoom, i.panoId]),\n        h = r(() => new kakao.maps.CustomOverlay({\n    clickable: d,\n    xAnchor: p,\n    yAnchor: c,\n    zIndex: u,\n    position: y,\n    content: C.current\n  }), [d, p, c]);\n  return o(() => {\n    if (w) {\n      if (h.setMap(w), g) {\n        const e = w.getProjection().viewpointFromCoords(h.getPosition(), h.getAltitude());\n        w.setViewpoint(e);\n      }\n\n      return () => {\n        h.setMap(null);\n      };\n    }\n  }, [h, w]), o(() => {\n    v && v(h);\n  }, [h, v]), o(() => {\n    h.setPosition(y);\n  }, [h, y]), o(() => {\n    u && h.setZIndex(u);\n  }, [h, u]), o(() => {\n    k && h.setAltitude(k);\n  }, [h, k]), o(() => {\n    m && h.setRange(m);\n  }, [h, m]), o(() => {\n    e && (C.current.id = e);\n  }, [e]), o(() => {\n    t && (C.current.className = t);\n  }, [t]), o(() => {\n    if (a) for (const [e, o] of Object.entries(a)) C.current.style[e] = o;\n  }, [a]), l.createPortal(s, C.current);\n},\n      A = _ref19 => {\n  let {\n    image: o,\n    position: t,\n    children: n,\n    altitude: a,\n    clickable: l,\n    infoWindowOptions: i,\n    onClick: s,\n    onDragEnd: d,\n    onDragStart: p,\n    onMouseOut: c,\n    onMouseOver: u,\n    onCreate: k,\n    opacity: g,\n    range: v,\n    title: w,\n    zIndex: C\n  } = _ref19;\n  const y = P(\"RoadviewMarker\"),\n        h = r(() => {\n    var e, t, n, a, r, l, i, s, d, p, c, u;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (e = o.options) ? void 0 : e.alt,\n      coords: null == (t = o.options) ? void 0 : t.coords,\n      offset: (null == (n = o.options) ? void 0 : n.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (r = o.options) ? void 0 : r.offset.y),\n      shape: null == (l = o.options) ? void 0 : l.shape,\n      spriteOrigin: (null == (i = o.options) ? void 0 : i.spriteOrigin) && new kakao.maps.Point(null == (s = o.options) ? void 0 : s.spriteOrigin.x, null == (d = o.options) ? void 0 : d.spriteOrigin.y),\n      spriteSize: (null == (p = o.options) ? void 0 : p.spriteSize) && new kakao.maps.Size(null == (c = o.options) ? void 0 : c.spriteSize.width, null == (u = o.options) ? void 0 : u.spriteSize.height)\n    });\n  }, [o]),\n        f = r(() => \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : \"x\" in t ? new kakao.maps.Coords(t.x, t.y).toLatLng() : new kakao.maps.Viewpoint(t.pan, t.tilt, t.zoom, t.panoId), [t.lat, t.lng, t.x, t.y, t.pan, t.tilt, t.zoom, null == t ? void 0 : t.panoId]);\n  return e.createElement(m, {\n    map: y,\n    position: f,\n    image: h,\n    altitude: a,\n    clickable: l,\n    infoWindowOptions: i,\n    onClick: s,\n    onDragEnd: d,\n    onDragStart: p,\n    onMouseOut: c,\n    onMouseOver: u,\n    onCreate: k,\n    opacity: g,\n    range: v,\n    title: w,\n    zIndex: C\n  }, n);\n},\n      E = _ref20 => {\n  let {\n    id: o,\n    className: t,\n    style: n,\n    position: a,\n    children: l,\n    altitude: i,\n    disableAutoPan: s,\n    range: d,\n    removable: p,\n    zIndex: u,\n    onCreate: k\n  } = _ref20;\n  const m = P(\"RoadviewInfoWindow\"),\n        g = r(() => \"lat\" in a ? new kakao.maps.LatLng(a.lat, a.lng) : new kakao.maps.Viewpoint(a.pan, a.tilt, a.zoom, a.panoId), [a.lat, a.lng, a.pan, a.tilt, a.zoom, a.panoId]);\n  return e.createElement(c, {\n    id: o,\n    className: t,\n    style: n,\n    altitude: i,\n    disableAutoPan: s,\n    range: d,\n    removable: p,\n    zIndex: u,\n    map: m,\n    position: g,\n    onCreate: k\n  }, l);\n};\n\nexport { O as AbstractOverlay, f as Circle, w as CustomOverlayMap, S as CustomOverlayRoadview, x as Ellipse, d as Map, v as MapInfoWindow, g as MapMarker, C as MapTypeControl, h as MapTypeId, k as MarkerClusterer, b as Polygon, M as Polyline, I as Rectangle, z as Roadview, E as RoadviewInfoWindow, A as RoadviewMarker, y as ZoomControl, p as useMap, P as useRoadview };","map":{"version":3,"mappings":"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","names":["useKakaoEvent","target","type","callback","useEffect","wrapCallback","arg","undefined","kakao","maps","event","addListener","removeListener","KakaoMapContext","React","createContext","Map","onZoomStart","id","style","children","center","isPanto","padding","className","disableDoubleClick","disableDoubleClickZoom","draggable","zoomable","keyboardShortcuts","level","maxLevel","minLevel","mapTypeId","projectionId","scrollwheel","tileAnimation","onCreate","onBoundsChanged","onCenterChanged","onClick","onDoubleClick","onDrag","onDragEnd","onDragStart","onIdle","onMaptypeidChanged","onMouseMove","onRightClick","onTileLoaded","onZoomChanged","map","setMap","useState","container","useRef","window","current","load","initalMapCenter","LatLng","lat","lng","Coords","x","y","kakaoMap","console","warn","prevCenter","getCenter","toLatLng","centerPosition","equals","panTo","setCenter","setDraggable","setZoomable","setKeyboardShortcuts","setLevel","setMapTypeId","setProjectionId","setMaxLevel","setMinLevel","ref","Provider","value","useMap","componentName","useContext","Error","InfoWindow","position","marker","altitude","disableAutoPan","range","removable","zIndex","document","createElement","infoWindow","useMemo","kakaoInfoWindow","content","whiteSpace","open","close","setPosition","setAltitude","setRange","setZIndex","key","Object","entries","ReactDom","createPortal","KakaoMapMarkerClustererContext","MarkerClusterer","averageCenter","calculator","clickable","disableClickZoom","gridSize","hoverable","minClusterSize","styles","texts","onClusterclick","onClusterdblclick","onClustered","onClusterout","onClusterover","onClusterrightclick","markerCluster","setMarkerCluster","cluster","setGridSize","redraw","setMinClusterSize","setAverageCenter","setTexts","setCalculator","setStyles","Marker","image","infoWindowOptions","onMouseOut","onMouseOver","opacity","title","addMarker","removeMarker","setImage","setClickable","setOpacity","setTitle","MapMarker","markerImage","MarkerImage","src","Size","size","width","height","alt","options","_image$options","coords","_image$options2","offset","Point","_image$options4","_image$options5","shape","_image$options6","spriteOrigin","_image$options8","_image$options9","spriteSize","_image$options11","_image$options12","markerPosition","MapInfoWindow","infoPosition","CustomOverlayMap","xAnchor","yAnchor","overlayPosition","overlay","CustomOverlay","ReactDOM","MapTypeControl","TOPRIGHT","ControlPosition","mapTypeControl","addControl","removeControl","ZoomControl","RIGHT","MapTypeId","addOverlayMapTypeId","removeOverlayMapTypeId","Circle","radius","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeStyle","strokeWeight","onMouseover","onMouseout","onMousemove","onMousedown","circleCenter","circle","setRadius","setOptions","Polyline","path","endArrow","polyLinePath","every","v","Array","p","polyline","setPath","Polygon","polygonPath","polygon","Rectangle","bounds","rectangleBounds","LatLngBounds","sw","ne","rectangle","setBounds","Ellipse","rx","ry","ellipseCenter","ellipse","AbstractOverlay","draw","onAdd","onRemove","reactAbstractOverlay","ReactAbstractOveraly","constructor","super","this","KakaoRoadviewContext","Roadview","onErrorGetNearestPanoId","pan","panoId","panoX","panoY","tilt","zoom","onInit","onPanoidChange","onPositionChanged","onViewpointChange","isLoading","setIsLoading","roadview","setRoadview","kakaoRoadview","getPosition","getLat","getLng","newPostion","RoadviewClient","getNearestPanoId","setPanoId","getPanoId","prevViewpoint","getViewpoint","setViewpoint","useRoadview","CustomOverlayRoadview","isFocus","Viewpoint","viewpoint","getProjection","viewpointFromCoords","getAltitude","RoadviewMarker","RoadviewInfoWindow"],"sources":["/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/hooks/useKakaoEvent.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/Map.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/hooks/useMap.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/InfoWindow.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/MarkerClusterer.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/Marker.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/MapMarker.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/MapInfoWindow.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/CustomOverlayMap.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/MapTypeControl.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/ZoomControl.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/MapTypeId.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/Circle.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/Polyline.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/Polygon.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/Rectangle.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/Ellipse.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/AbstractOverlay.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/Roadview.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/hooks/useRoadview.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/CustomOverlayRoadview.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/RoadviewMarker.tsx","/Users/chanw12/Documents/capstone/market/node_modules/react-kakao-maps-sdk/src/components/RoadviewInfoWindow.tsx"],"sourcesContent":["import { useEffect } from \"react\"\n\nconst useKakaoEvent = <T extends kakao.maps.event.EventTarget>(\n  /**\n   * 이벤트 타겟\n   */\n  target: T | undefined,\n  /**\n   * event 타입\n   */\n  type: string,\n  /**\n   * 호출될 callback\n   */\n  callback: ((target: T, ...args: any[]) => void) | undefined\n) => {\n  useEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    kakao.maps.event.addListener(target, type, wrapCallback)\n\n    return () => {\n      kakao.maps.event.removeListener(target, type, wrapCallback)\n    }\n  }, [target, type, callback])\n}\n\nexport default useKakaoEvent\n","import React, { useEffect, useRef, useState } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\n\nexport const KakaoMapContext = React.createContext<kakao.maps.Map>(\n  undefined as unknown as kakao.maps.Map\n)\nexport interface MapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   *\n   * @default  \"kakao-map-container\"\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  /**\n   * 중심을 이동시킬때 Panto를 사용할지 정합니다.\n   * @default false\n   */\n  isPanto?: boolean\n\n  /**\n   * 중심 좌표를 지정한 좌표 또는 영역으로 부드럽게 이동한다. 필요하면 확대 또는 축소도 수행한다.\n   * 만약 이동할 거리가 지도 화면의 크기보다 클 경우 애니메이션 없이 이동한다.\n   * padding 만큼 제외하고 영역을 계산하며, padding 을 지정하지 않으면 기본값으로 32가 사용된다.\n   */\n  padding?: number\n\n  /**\n   * 확대 수준 (기본값: 3)\n   */\n  level?: number\n\n  /**\n   * 최대 확대 수준\n   */\n  maxLevel?: number\n\n  /**\n   * 최소 확대 수준\n   */\n  minLevel?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 마우스 드래그, 휠, 모바일 터치를 이용한 시점 변경(이동, 확대, 축소) 가능 여부\n   */\n  draggable?: boolean\n\n  /**\n   * 마우스 휠이나 멀티터치로 지도 확대, 축소 기능을 막습니다. 상황에 따라 지도 확대, 축소 기능을 제어할 수 있습니다.\n   */\n  zoomable?: boolean\n\n  /**\n   * 마우스 휠, 모바일 터치를 이용한 확대 및 축소 가능 여부\n   */\n  scrollwheel?: boolean\n\n  /**\n   * 더블클릭 이벤트 및 더블클릭 확대 가능 여부\n   */\n  disableDoubleClick?: boolean\n\n  /**\n   * 더블클릭 확대 가능 여부\n   */\n  disableDoubleClickZoom?: boolean\n\n  /**\n   * 투영법 지정 (기본값: kakao.maps.ProjectionId.WCONG)\n   */\n  projectionId?: string\n\n  /**\n   * 지도 타일 애니메이션 설정 여부 (기본값: true)\n   */\n  tileAnimation?: boolean\n\n  /**\n   * 키보드의 방향키와 +, – 키로 지도 이동,확대,축소 가능 여부 (기본값: false)\n   */\n  keyboardShortcuts?:\n    | boolean\n    | {\n        /**\n         * 지도 이동 속도\n         */\n        speed: number\n      }\n\n  /**\n   * map 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (map: kakao.maps.Map) => void\n\n  /**\n   * 중심 좌표가 변경되면 발생한다.\n   */\n  onCenterChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되기 직전 발생한다.\n   */\n  onZoomStart?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되면 발생한다.\n   */\n  onZoomChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 영역이 변경되면 발생한다.\n   */\n  onBoundsChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도를 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 더블클릭하면 발생한다.\n   */\n  onDoubleClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 마우스 오른쪽 버튼으로 클릭하면 발생한다.\n   */\n  onRightClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도에서 마우스 커서를 이동하면 발생한다.\n   */\n  onMouseMove?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 시작할 때 발생한다.\n   */\n  onDragStart?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 하는 동안 발생한다.\n   */\n  onDrag?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그가 끝날 때 발생한다.\n   */\n  onDragEnd?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 중심 좌표나 확대 수준이 변경되면 발생한다.\n   * 단, 애니메이션 도중에는 발생하지 않는다.\n   */\n  onIdle?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대수준이 변경되거나 지도가 이동했을때 타일 이미지 로드가 모두 완료되면 발생한다.\n   * 지도이동이 미세하기 일어나 타일 이미지 로드가 일어나지 않은경우 발생하지 않는다.\n   */\n  onTileLoaded?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 기본 타일(일반지도, 스카이뷰, 하이브리드)이 변경되면 발생한다.\n   */\n  onMaptypeidChanged?: (target: kakao.maps.Map) => void\n}\n\n/**\n * 기본적인 Map 객체를 생성하는 Comeponent 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 반환 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `map` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst Map: React.FC<MapProps> = ({\n  id = \"kakao-map-container\",\n  style,\n  children,\n  center,\n  isPanto = false,\n  padding = 32,\n  className,\n  disableDoubleClick,\n  disableDoubleClickZoom,\n  draggable,\n  zoomable,\n  keyboardShortcuts,\n  level,\n  maxLevel,\n  minLevel,\n  mapTypeId,\n  projectionId,\n  scrollwheel,\n  tileAnimation,\n  onCreate,\n  onBoundsChanged,\n  onCenterChanged,\n  onClick,\n  onDoubleClick,\n  onDrag,\n  onDragEnd,\n  onDragStart,\n  onIdle,\n  onMaptypeidChanged,\n  onMouseMove,\n  onRightClick,\n  onTileLoaded,\n  onZoomChanged,\n  onZoomStart,\n}) => {\n  const [map, setMap] = useState<kakao.maps.Map>()\n\n  const container = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!window.kakao) {\n      console.warn(\n        \"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\"\n      )\n      return\n    }\n    if (!container.current) {\n      return\n    }\n\n    kakao.maps.load(() => {\n      const initalMapCenter =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n      const kakaoMap = new kakao.maps.Map(container.current as HTMLDivElement, {\n        center: initalMapCenter,\n        disableDoubleClick: disableDoubleClick,\n        disableDoubleClickZoom: disableDoubleClickZoom,\n        draggable: draggable,\n        keyboardShortcuts: keyboardShortcuts,\n        level: level,\n        mapTypeId: mapTypeId,\n        projectionId: projectionId,\n        scrollwheel: scrollwheel,\n        tileAnimation: tileAnimation,\n      })\n\n      setMap(kakaoMap)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disableDoubleClick, disableDoubleClickZoom, mapTypeId, tileAnimation])\n\n  useEffect(() => {\n    if (!map || !onCreate) return\n    onCreate(map)\n  }, [map, onCreate])\n\n  // center position 변경시 map center 변경\n  useEffect(() => {\n    if (!map) return\n\n    let prevCenter = map.getCenter()\n    if (prevCenter instanceof kakao.maps.Coords) {\n      prevCenter = prevCenter.toLatLng()\n    }\n\n    const centerPosition =\n      \"lat\" in center\n        ? new kakao.maps.LatLng(center.lat, center.lng)\n        : new kakao.maps.Coords(center.x, center.y)\n\n    if (\n      (centerPosition instanceof kakao.maps.LatLng &&\n        centerPosition.equals(prevCenter)) ||\n      (centerPosition instanceof kakao.maps.Coords &&\n        centerPosition.toLatLng().equals(prevCenter))\n    ) {\n      return\n    }\n\n    if (isPanto) {\n      map.panTo(centerPosition, padding)\n    } else {\n      map.setCenter(centerPosition)\n    }\n    // @ts-ignore\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, center.lat, center.lng, center.x, center.y])\n\n  useEffect(() => {\n    if (!map || typeof draggable === \"undefined\") return\n    map.setDraggable(draggable)\n  }, [map, draggable])\n\n  useEffect(() => {\n    if (!map || typeof zoomable === \"undefined\") return\n    map.setZoomable(zoomable)\n  }, [map, zoomable])\n\n  useEffect(() => {\n    if (!map || !keyboardShortcuts || typeof keyboardShortcuts !== \"boolean\")\n      return\n    map.setKeyboardShortcuts(keyboardShortcuts)\n  }, [map, keyboardShortcuts])\n\n  useEffect(() => {\n    if (!map || !level) return\n    map.setLevel(level)\n  }, [map, level])\n\n  useEffect(() => {\n    if (!map || !mapTypeId) return\n    map.setMapTypeId(mapTypeId)\n  }, [map, mapTypeId])\n\n  useEffect(() => {\n    if (!map || !projectionId) return\n    map.setProjectionId(projectionId)\n  }, [map, projectionId])\n\n  useEffect(() => {\n    if (!map || !maxLevel) return\n    map.setMaxLevel(maxLevel)\n  }, [map, maxLevel])\n\n  useEffect(() => {\n    if (!map || !minLevel) return\n    map.setMinLevel(minLevel)\n  }, [map, minLevel])\n\n  useKakaoEvent(map, \"bounds_changed\", onBoundsChanged)\n  useKakaoEvent(map, \"center_changed\", onCenterChanged)\n  useKakaoEvent(map, \"click\", onClick)\n  useKakaoEvent(map, \"dblclick\", onDoubleClick)\n  useKakaoEvent(map, \"drag\", onDrag)\n  useKakaoEvent(map, \"dragstart\", onDragStart)\n  useKakaoEvent(map, \"dragend\", onDragEnd)\n  useKakaoEvent(map, \"idle\", onIdle)\n  useKakaoEvent(map, \"maptypeid_changed\", onMaptypeidChanged)\n  useKakaoEvent(map, \"mousemove\", onMouseMove)\n  useKakaoEvent(map, \"rightclick\", onRightClick)\n  useKakaoEvent(map, \"tilesloaded\", onTileLoaded)\n  useKakaoEvent(map, \"zoom_changed\", onZoomChanged)\n  useKakaoEvent(map, \"zoom_start\", onZoomStart)\n\n  return (\n    <>\n      <div id={id} style={style} className={className} ref={container}></div>\n      {map && (\n        <KakaoMapContext.Provider value={map}>\n          {children}\n        </KakaoMapContext.Provider>\n      )}\n    </>\n  )\n}\n\nexport default Map\n","import { useContext } from \"react\"\nimport { KakaoMapContext } from \"../components/Map\"\n\n/**\n * kakao map 객체를 가져오는 hook 입니다.\n * Map 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useMap = (componentName?: string) => {\n  const kakaoMap = useContext(KakaoMapContext)\n  if (!kakaoMap) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useMap\"\n      } must exist inside Map Component!`\n    )\n  }\n\n  return kakaoMap\n}\n\nexport default useMap\n","import React, { useEffect, useMemo, useRef } from \"react\"\nimport ReactDom from \"react-dom\"\n\ninterface InfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n  marker?: kakao.maps.Marker\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부\n   * @default false\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\nconst InfoWindow: React.FC<InfoWindowProps> = ({\n  id,\n  className,\n  style,\n  map,\n  position,\n  marker,\n  children,\n  altitude,\n  disableAutoPan,\n  range,\n  removable,\n  zIndex,\n  onCreate,\n}) => {\n  const container = useRef(document.createElement(\"div\"))\n\n  const infoWindow = useMemo(() => {\n    const kakaoInfoWindow = new kakao.maps.InfoWindow({\n      altitude: altitude,\n      disableAutoPan: disableAutoPan,\n      range: range,\n      removable: removable,\n      zIndex: zIndex,\n      content: container.current,\n      position: position,\n    })\n    container.current.style.whiteSpace = \"nowrap\"\n    return kakaoInfoWindow\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disableAutoPan, removable])\n\n  useEffect(() => {\n    infoWindow.open(map, marker)\n    return () => {\n      infoWindow.close()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, marker])\n\n  useEffect(() => {\n    if (onCreate) onCreate(infoWindow)\n  }, [infoWindow, onCreate])\n\n  useEffect(() => {\n    if (!infoWindow) return\n    infoWindow.setPosition(position)\n  }, [infoWindow, position])\n\n  useEffect(() => {\n    if (!infoWindow || !altitude) return\n    infoWindow.setAltitude(altitude)\n  }, [infoWindow, altitude])\n\n  useEffect(() => {\n    if (!infoWindow || !range) return\n    infoWindow.setRange(range)\n  }, [infoWindow, range])\n\n  useEffect(() => {\n    if (!infoWindow || !zIndex) return\n    infoWindow.setZIndex(zIndex)\n  }, [infoWindow, zIndex])\n\n  useEffect(() => {\n    if (id) container.current.id = id\n  }, [id])\n\n  useEffect(() => {\n    if (className) container.current.className = className\n  }, [className])\n\n  useEffect(() => {\n    if (style) {\n      for (const [key, value] of Object.entries(style)) {\n        container.current.style[key] = value\n      }\n    }\n  }, [style])\n\n  return ReactDom.createPortal(children, container.current)\n}\n\nexport default InfoWindow\n","import React, { useEffect, useState } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport const KakaoMapMarkerClustererContext =\n  React.createContext<kakao.maps.MarkerClusterer>(\n    undefined as unknown as kakao.maps.MarkerClusterer\n  )\n\nexport interface MarkerClustererProps {\n  /**\n   * 클러스터의 격자 크기. 화면 픽셀 단위이며 해당 격자 영역 안에 마커가 포함되면 클러스터에 포함시킨다\n   * @default 60\n   */\n  gridSize?: number\n  /**\n   * 마커들의 좌표 평균을 클러스터 좌표 설정 여부\n   * @default false\n   */\n  averageCenter?: boolean\n  /**\n   * 클러스터링 할 지도의 최소 레벨 값. 지정한 숫자에 해당하는 레벨 미만에서는 클러스터링 하지 않는다\n   * @default 0\n   */\n  minLevel?: number\n  /**\n   * 클러스터링 할 최소 마커 수\n   * @default 2\n   */\n  minClusterSize?: number\n  /**\n   * 클러스터의 스타일. 여러개를 선언하면 calculator 로 구분된 사이즈 구간마다 서로 다른 스타일을 적용시킬 수 있다\n   */\n  styles?: React.CSSProperties[] | object[]\n  /**\n   * 클러스터에 표시할 문자열 또는 문자열 생성 함수.\n   * @default \"클러스터에 포함된 숫자\"\n   */\n  texts?: string[] | ((size: number) => string)\n  /**\n   * 클러스터 크기를 구분하는 값을 가진 배열 또는 구분값 생성함수\n   * @default [10, 100, 1000, 10000]\n   */\n  calculator?: number[] | ((size: number) => number[])\n  /**\n   * 클러스터 클릭 시 지도 확대 여부. true로 설정하면 클러스터 클릭 시 확대 되지 않는다\n   * @default false\n   */\n  disableClickZoom?: boolean\n  /**\n   * 클러스터 클릭 가능 여부 지정 옵션. false일 경우 클러스터의 clusterclick, clusterdblclick, clusterrightclick 이벤트가 발생하지 않으며, 커서가 변경되지 않는다.\n   * @default true\n   */\n  clickable?: boolean\n  /**\n   * 클러스터에 마우스 over/out 가능 여부 지정 옵션. false일 경우 클러스터의 clusterover, clusterout 이벤트가 발생하지 않는다.\n   * @default true\n   */\n  hoverable?: boolean\n\n  /**\n   * 클러스터 마커를 클릭 했을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 Cluster 객체가 넘어온다.\n   * 클러스터 마커 클릭 시 지도가 줌인 되는 경우 원하는 Cluster 객체를 얻지 못할 수도 있다.\n   * 때문에 MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정하여\n   * 클러스터 마커를 클릭했을 때 지도가 줌인되지 않도록 설정 후 사용한다.\n   */\n  onClusterclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 오버 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 오버한 Cluster 객체가 넘어온다.\n   */\n  onClusterover?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 아웃 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 아웃된 Cluster 객체가 넘어온다.\n   */\n  onClusterout?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 더블클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 더블클릭한 Cluster 객체가 넘어온다.\n   * MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정해야만 이벤트가 발생한다.\n   */\n  onClusterdblclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 오른쪽 클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 오른쪽 클릭한 Cluster 객체가 넘어온다.\n   */\n  onClusterrightclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터링이 완료됐을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 생성된 Cluster 객체 전체가 배열로 넘어온다.\n   */\n  onClustered?: (\n    target: kakao.maps.MarkerClusterer,\n    clusters: kakao.maps.Cluster[]\n  ) => void\n  /**\n   * MarkerClusterer 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (target: kakao.maps.MarkerClusterer) => void\n}\n\nconst MarkerClusterer: React.FC<MarkerClustererProps> = ({\n  children,\n  averageCenter,\n  calculator,\n  clickable,\n  disableClickZoom,\n  gridSize,\n  hoverable,\n  minClusterSize,\n  minLevel,\n  styles,\n  texts,\n  onClusterclick,\n  onClusterdblclick,\n  onClustered,\n  onClusterout,\n  onClusterover,\n  onClusterrightclick,\n  onCreate,\n}) => {\n  const map = useMap(`MarkerClusterer`)\n  const [markerCluster, setMarkerCluster] =\n    useState<kakao.maps.MarkerClusterer>()\n\n  useEffect(() => {\n    if (!window.kakao.maps.MarkerClusterer) {\n      console.warn(\n        \"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n      )\n      return\n    }\n    const cluster = new kakao.maps.MarkerClusterer({\n      averageCenter,\n      calculator,\n      clickable,\n      disableClickZoom,\n      gridSize,\n      hoverable,\n      minClusterSize,\n      minLevel,\n      styles,\n      texts,\n    })\n\n    setMarkerCluster(cluster)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    markerCluster?.setMap(map)\n  }, [map, markerCluster])\n\n  useEffect(() => {\n    if (markerCluster && onCreate) onCreate(markerCluster)\n  }, [markerCluster, onCreate])\n\n  useEffect(() => {\n    if (markerCluster && gridSize) {\n      markerCluster.setGridSize(gridSize)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, gridSize])\n\n  useEffect(() => {\n    if (markerCluster && minClusterSize) {\n      markerCluster.setMinClusterSize(minClusterSize)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, minClusterSize])\n\n  useEffect(() => {\n    if (markerCluster && typeof averageCenter !== \"undefined\") {\n      markerCluster.setAverageCenter(averageCenter)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, averageCenter])\n\n  useEffect(() => {\n    if (markerCluster && minLevel) {\n      markerCluster.setMinLevel(minLevel)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, minLevel])\n\n  useEffect(() => {\n    if (markerCluster && texts) {\n      markerCluster.setTexts(texts)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, texts])\n\n  useEffect(() => {\n    if (markerCluster && calculator) {\n      markerCluster.setCalculator(calculator)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, calculator])\n\n  useEffect(() => {\n    if (markerCluster && styles) {\n      markerCluster.setStyles(styles)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, styles])\n\n  useKakaoEvent(markerCluster, \"clusterclick\", onClusterclick)\n  useKakaoEvent(markerCluster, \"clusterover\", onClusterover)\n  useKakaoEvent(markerCluster, \"clusterout\", onClusterout)\n  useKakaoEvent(markerCluster, \"clusterdblclick\", onClusterdblclick)\n  useKakaoEvent(markerCluster, \"clusterrightclick\", onClusterrightclick)\n  useKakaoEvent(markerCluster, \"clustered\", onClustered)\n\n  if (!markerCluster) {\n    return null\n  }\n\n  return (\n    <KakaoMapMarkerClustererContext.Provider value={markerCluster}>\n      {children}\n    </KakaoMapMarkerClustererContext.Provider>\n  )\n}\n\nexport default MarkerClusterer\n","import React, { useContext, useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport InfoWindow from \"./InfoWindow\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\ninterface MarkerProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n\n  /**\n   * marker 생성 후 marker 객체를 전달하는 callback\n   */\n  onCreate?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * 마커의 이미지\n   */\n  image?: kakao.maps.MarkerImage\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * Contianer id에 대해서 지정합니다.\n     */\n    id?: string\n\n    /**\n     * Contianer className에 대해서 지정합니다.\n     */\n    className?: string\n\n    /**\n     * Contianer style에 대해서 지정합니다.\n     */\n    style?: React.CSSProperties\n\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n\n    /**\n     * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n     */\n    altitude?: number\n\n    /**\n     * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n     */\n    range?: number\n  }\n}\n\nconst Marker: React.FC<MarkerProps> = ({\n  map,\n  position,\n  children,\n  altitude,\n  clickable,\n  draggable,\n  image,\n  infoWindowOptions,\n  onCreate,\n  onClick,\n  onDragEnd,\n  onDragStart,\n  onMouseOut,\n  onMouseOver,\n  opacity,\n  range,\n  title,\n  zIndex,\n}) => {\n  const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n  // Marker 객체는 단 한번만 생성 되도록 함\n  const marker = useMemo(() => {\n    const kakaoMarker = new kakao.maps.Marker({\n      altitude,\n      clickable,\n      draggable,\n      image,\n      opacity,\n      range,\n      title,\n      zIndex,\n      position,\n    })\n\n    return kakaoMarker\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (markerCluster) {\n      markerCluster.addMarker(marker)\n    } else {\n      marker.setMap(map)\n    }\n\n    return () => {\n      if (markerCluster) {\n        markerCluster.removeMarker(marker)\n      } else {\n        marker.setMap(null)\n      }\n    }\n  }, [map, markerCluster, marker])\n\n  useEffect(() => {\n    if (onCreate) onCreate(marker)\n  }, [marker, onCreate])\n\n  useKakaoEvent(marker, \"click\", onClick)\n  useKakaoEvent(marker, \"dragstart\", onDragStart)\n  useKakaoEvent(marker, \"dragend\", onDragEnd)\n  useKakaoEvent(marker, \"mouseout\", onMouseOut)\n  useKakaoEvent(marker, \"mouseover\", onMouseOver)\n\n  // position이 변경되면 객체를 갱신한다.\n  useEffect(() => {\n    if (!map || !marker || !position) return\n\n    marker.setPosition(position)\n  }, [map, marker, position])\n\n  // image 객체가 존재하면 이미지를 로드한다\n  useEffect(() => {\n    if (!map || !marker || !image) return\n\n    marker.setImage(image)\n  }, [map, marker, image])\n\n  // altitude 값이 있으면 높이를 조정한다\n  useEffect(() => {\n    if (!map || !marker || !altitude) return\n\n    marker.setAltitude(altitude)\n  }, [map, marker, altitude])\n\n  // clickable 값이 있으면 클릭이 가능하도록 한다.\n  useEffect(() => {\n    if (!map || !marker || typeof clickable === \"undefined\") return\n\n    marker.setClickable(clickable)\n  }, [map, marker, clickable])\n\n  // draggable 값이 있으면 드래그가 가능하도록 한다.\n  useEffect(() => {\n    if (!map || !marker || typeof draggable === \"undefined\") return\n\n    marker.setDraggable(draggable)\n  }, [map, marker, draggable])\n\n  // opacity 값이 있으면 투명도를 조절한다.\n  useEffect(() => {\n    if (!map || !marker || !opacity) return\n\n    marker.setOpacity(opacity)\n  }, [map, marker, opacity])\n\n  // range 값이 있으면 마커의 가시반경을 조절한다.\n  useEffect(() => {\n    if (!map || !marker || !range) return\n\n    marker.setRange(range)\n  }, [map, marker, range])\n\n  // title 값이 있으면 마커의 제목을 조절한다.\n  useEffect(() => {\n    if (!map || !marker || !title) return\n\n    marker.setTitle(title)\n  }, [map, marker, title])\n\n  // zIndex 값이 있으면 마커의 zindex를 조절한다.\n  useEffect(() => {\n    if (!map || !marker || !zIndex) return\n\n    marker.setZIndex(zIndex)\n  }, [map, marker, zIndex])\n\n  if (children)\n    return (\n      <InfoWindow\n        position={position}\n        map={map}\n        marker={marker}\n        id={infoWindowOptions?.id}\n        className={infoWindowOptions?.className}\n        style={infoWindowOptions?.style}\n        altitude={infoWindowOptions?.altitude}\n        disableAutoPan={infoWindowOptions?.disableAutoPan}\n        range={infoWindowOptions?.range}\n        removable={infoWindowOptions?.removable}\n        zIndex={infoWindowOptions?.zIndex}\n      >\n        {children}\n      </InfoWindow>\n    )\n\n  return null\n}\n\nexport default Marker\n","import React, { useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport Marker from \"./Marker\"\n\nexport interface MapMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * Contianer id에 대해서 지정합니다.\n       */\n      id?: string\n\n      /**\n       * Contianer className에 대해서 지정합니다.\n       */\n      className?: string\n\n      /**\n       * Contianer style에 대해서 지정합니다.\n       */\n      style?: React.CSSProperties\n\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * Contianer id에 대해서 지정합니다.\n     */\n    id?: string\n\n    /**\n     * Contianer className에 대해서 지정합니다.\n     */\n    className?: string\n\n    /**\n     * Contianer style에 대해서 지정합니다.\n     */\n    style?: React.CSSProperties\n\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapMarker: React.FC<MapMarkerProps> = ({\n  image,\n  position,\n  children,\n  clickable,\n  draggable,\n  infoWindowOptions,\n  onClick,\n  onDragEnd,\n  onDragStart,\n  onMouseOut,\n  onMouseOver,\n  onCreate,\n  opacity,\n  title,\n  zIndex,\n}) => {\n  const map = useMap(`MapMarker`)\n\n  const markerImage = useMemo(() => {\n    return (\n      image &&\n      new kakao.maps.MarkerImage(\n        image.src,\n        new kakao.maps.Size(image.size.width, image.size.height),\n        {\n          alt: image.options?.alt,\n          coords: image.options?.coords,\n          offset:\n            image.options?.offset &&\n            new kakao.maps.Point(\n              image.options?.offset.x,\n              image.options?.offset.y\n            ),\n          shape: image.options?.shape,\n          spriteOrigin:\n            image.options?.spriteOrigin &&\n            new kakao.maps.Point(\n              image.options?.spriteOrigin.x,\n              image.options?.spriteOrigin.y\n            ),\n          spriteSize:\n            image.options?.spriteSize &&\n            new kakao.maps.Size(\n              image.options?.spriteSize.width,\n              image.options?.spriteSize.height\n            ),\n        }\n      )\n    )\n  }, [image])\n\n  const markerPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }\n    return new kakao.maps.Coords(position.x, position.y).toLatLng()\n\n    // @ts-ignore\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [position.lat, position.lng, position.x, position.y])\n\n  return (\n    <Marker\n      map={map}\n      position={markerPosition}\n      image={markerImage}\n      clickable={clickable}\n      draggable={draggable}\n      infoWindowOptions={infoWindowOptions}\n      onClick={onClick}\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      onMouseOut={onMouseOut}\n      onMouseOver={onMouseOver}\n      onCreate={onCreate}\n      opacity={opacity}\n      title={title}\n      zIndex={zIndex}\n    >\n      {children}\n    </Marker>\n  )\n}\n\nexport default MapMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapInfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapInfoWindow: React.FC<MapInfoWindowProps> = ({\n  id,\n  className,\n  style,\n  position,\n  children,\n  disableAutoPan,\n  removable,\n  zIndex,\n  onCreate,\n}) => {\n  const map = useMap(`MapInfoWindow`)\n  const infoPosition = useMemo(() => {\n    return new kakao.maps.LatLng(position.lat, position.lng)\n  }, [position.lat, position.lng])\n\n  return (\n    <InfoWindow\n      id={id}\n      className={className}\n      style={style}\n      disableAutoPan={disableAutoPan}\n      removable={removable}\n      zIndex={zIndex}\n      map={map}\n      position={infoPosition}\n      onCreate={onCreate}\n    >\n      {children}\n    </InfoWindow>\n  )\n}\n\nexport default MapInfoWindow\n","import React, { useEffect, useMemo, useRef } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface CustomOverlayMapProps {\n  /**\n   * CustomOverlay의 Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * CustomOverlay의 Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * CustomOverlay의 Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Map에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 함수를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayMap: React.FC<CustomOverlayMapProps> = ({\n  id,\n  className,\n  style,\n  position,\n  children,\n  clickable,\n  xAnchor,\n  yAnchor,\n  zIndex,\n  onCreate,\n}) => {\n  const map = useMap(`CustomOverlayMap`)\n  const container = useRef(document.createElement(\"div\"))\n\n  const overlayPosition = useMemo(() => {\n    return new kakao.maps.LatLng(position.lat, position.lng)\n  }, [position.lat, position.lng])\n\n  const overlay = useMemo(() => {\n    const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n      clickable: clickable,\n      xAnchor: xAnchor,\n      yAnchor: yAnchor,\n      zIndex: zIndex,\n      position: overlayPosition,\n      content: container.current,\n    })\n\n    return KakaoCustomOverlay\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickable, xAnchor, yAnchor])\n\n  useEffect(() => {\n    if (!map) return\n\n    overlay.setMap(map)\n    return () => {\n      overlay.setMap(null)\n    }\n  }, [map, overlay])\n\n  useEffect(() => {\n    if (onCreate) onCreate(overlay)\n  }, [overlay, onCreate])\n\n  useEffect(() => {\n    overlay.setPosition(overlayPosition)\n  }, [overlay, overlayPosition])\n\n  useEffect(() => {\n    if (!zIndex) return\n    overlay.setZIndex(zIndex)\n  }, [overlay, zIndex])\n\n  useEffect(() => {\n    if (id) container.current.id = id\n  }, [id])\n\n  useEffect(() => {\n    if (className) container.current.className = className\n  }, [className])\n\n  useEffect(() => {\n    if (style) {\n      for (const [key, value] of Object.entries(style)) {\n        container.current.style[key] = value\n      }\n    }\n  }, [style])\n\n  return ReactDOM.createPortal(children, container.current)\n}\n\nexport default CustomOverlayMap\n","import React, { useEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeControlProps {\n  /**\n   * MapTypeControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 일반 지도/하이브리드 간 지도 타입 전환 컨트롤을 생성한다.\n * 현재는 일반 지도/하이브리드 간 전환 컨트롤만 지원되며 다른 지도 타입을 제어하는 컨트롤이 필요할 경우에는 직접 구현해야 한다.\n */\nconst MapTypeControl: React.FC<MapTypeControlProps> = ({\n  position = kakao.maps.ControlPosition.TOPRIGHT,\n}) => {\n  const map = useMap(`MapTypeControl`)\n\n  const mapTypeControl = useMemo(() => {\n    return new kakao.maps.MapTypeControl()\n  }, [])\n\n  useEffect(() => {\n    map.addControl(mapTypeControl, position)\n\n    return () => {\n      map.removeControl(mapTypeControl)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, position])\n\n  return null\n}\n\nexport default MapTypeControl\n","import React, { useEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface ZoomControlProps {\n  /**\n   * ZoomControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 확대·축소 컨트롤을 생성한다.\n */\nconst ZoomControl: React.FC<ZoomControlProps> = ({\n  position = kakao.maps.ControlPosition.RIGHT,\n}) => {\n  const map = useMap(`ZoomControl`)\n\n  const ZoomControl = useMemo(() => {\n    return new kakao.maps.ZoomControl()\n  }, [])\n\n  useEffect(() => {\n    map.addControl(ZoomControl, position)\n\n    return () => {\n      map.removeControl(ZoomControl)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, position])\n\n  return null\n}\n\nexport default ZoomControl\n","import React, { useEffect } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeIdProps {\n  /**\n   * MapTypeId를 정의 한다.\n   */\n  type: kakao.maps.MapTypeId\n}\n\n/**\n * 추가적으로 보이고 싶은 지도 타입을 추가 할 때 사용한다.\n */\nconst MapTypeId: React.FC<MapTypeIdProps> = ({ type }) => {\n  const map = useMap(`MapTypeId`)\n\n  useEffect(() => {\n    map.addOverlayMapTypeId(type)\n\n    return () => {\n      map.removeOverlayMapTypeId(type)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, type])\n\n  return null\n}\n\nexport default MapTypeId\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface CircleProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 원의 반지름 크기를 지정합니다 (미터 단위).\n   */\n  radius: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Circle) => void\n}\n\n/**\n * Map 상에 원을 그립니다.\n */\nconst Circle: React.FC<CircleProps> = ({\n  center,\n  radius,\n  fillColor,\n  fillOpacity,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  zIndex,\n  onMouseover,\n  onMouseout,\n  onMousemove,\n  onMousedown,\n  onClick,\n  onCreate,\n}) => {\n  const map = useMap(`Circle`)\n\n  const circleCenter = useMemo(() => {\n    return new kakao.maps.LatLng(center.lat, center.lng)\n  }, [center.lat, center.lng])\n\n  const circle = useMemo(() => {\n    return new kakao.maps.Circle({\n      center: circleCenter,\n      radius,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    circle.setMap(map)\n    return () => {\n      circle.setMap(null)\n    }\n  }, [map, circle])\n\n  useEffect(() => {\n    if (onCreate) onCreate(circle)\n  }, [circle, onCreate])\n\n  useEffect(() => {\n    if (circle) circle.setPosition(circleCenter)\n  }, [circle, circleCenter])\n\n  useEffect(() => {\n    circle.setRadius(radius)\n  }, [circle, radius])\n\n  useEffect(() => {\n    if (!zIndex) return\n    circle.setZIndex(zIndex)\n  }, [circle, zIndex])\n\n  useEffect(() => {\n    circle.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    circle,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useKakaoEvent(circle, \"mouseover\", onMouseover)\n  useKakaoEvent(circle, \"mouseout\", onMouseout)\n  useKakaoEvent(circle, \"mousemove\", onMousemove)\n  useKakaoEvent(circle, \"mousedown\", onMousedown)\n  useKakaoEvent(circle, \"click\", onClick)\n\n  return null\n}\n\nexport default Circle\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolylineProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * 화살표 여부\n   */\n  endArrow?: boolean\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polyline) => void\n}\n\n/**\n * Map 상에 폴리라인을 그립니다.\n */\nconst Polyline: React.FC<PolylineProps> = ({\n  path,\n  endArrow,\n  onClick,\n  onMousedown,\n  onMousemove,\n  onMouseout,\n  onMouseover,\n  onCreate,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  zIndex,\n}) => {\n  const map = useMap(`Polyline`)\n\n  const polyLinePath = useMemo(() => {\n    if ((path as LatLng[]).every((v) => v instanceof Array)) {\n      return (path as LatLng[][]).map((v) => {\n        return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n      })\n    }\n    return (path as LatLng[]).map((v) => {\n      return new kakao.maps.LatLng(v.lat, v.lng)\n    })\n  }, [path])\n\n  const polyline = useMemo(() => {\n    return new kakao.maps.Polyline({\n      path: polyLinePath,\n      endArrow,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    polyline.setMap(map)\n    return () => polyline.setMap(null)\n  }, [map, polyline])\n\n  useEffect(() => {\n    if (onCreate) onCreate(polyline)\n  }, [polyline, onCreate])\n\n  useEffect(() => {\n    polyline.setOptions({\n      endArrow,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    polyline,\n    endArrow,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useEffect(() => {\n    polyline.setPath(polyLinePath)\n  }, [polyline, polyLinePath])\n\n  useEffect(() => {\n    if (zIndex) polyline.setZIndex(zIndex)\n  }, [polyline, zIndex])\n\n  useKakaoEvent(polyline, \"mouseover\", onMouseover)\n  useKakaoEvent(polyline, \"mouseout\", onMouseout)\n  useKakaoEvent(polyline, \"mousemove\", onMousemove)\n  useKakaoEvent(polyline, \"mousedown\", onMousedown)\n  useKakaoEvent(polyline, \"click\", onClick)\n\n  return null\n}\n\nexport default Polyline\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolygonProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polygon) => void\n}\n\n/**\n * Map 상에 다각형을 그립니다.\n */\nconst Polygon: React.FC<PolygonProps> = ({\n  path,\n  onClick,\n  onMousedown,\n  onMousemove,\n  onMouseout,\n  onMouseover,\n  onCreate,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  fillColor,\n  fillOpacity,\n  zIndex,\n}) => {\n  const map = useMap(`Polygon`)\n\n  const polygonPath = useMemo(() => {\n    if ((path as LatLng[]).every((v) => v instanceof Array)) {\n      return (path as LatLng[][]).map((v) => {\n        return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n      })\n    }\n    return (path as LatLng[]).map((v) => {\n      return new kakao.maps.LatLng(v.lat, v.lng)\n    })\n  }, [path])\n\n  const polygon = useMemo(() => {\n    return new kakao.maps.Polygon({\n      path: polygonPath,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    polygon.setMap(map)\n    return () => polygon.setMap(null)\n  }, [map, polygon])\n\n  useEffect(() => {\n    if (onCreate) onCreate(polygon)\n  }, [polygon, onCreate])\n\n  useEffect(() => {\n    polygon.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    polygon,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useEffect(() => {\n    polygon.setPath(polygonPath)\n  }, [polygon, polygonPath])\n\n  useEffect(() => {\n    if (zIndex) polygon.setZIndex(zIndex)\n  }, [polygon, zIndex])\n\n  useKakaoEvent(polygon, \"mouseover\", onMouseover)\n  useKakaoEvent(polygon, \"mouseout\", onMouseout)\n  useKakaoEvent(polygon, \"mousemove\", onMousemove)\n  useKakaoEvent(polygon, \"mousedown\", onMousedown)\n  useKakaoEvent(polygon, \"click\", onClick)\n\n  return null\n}\n\nexport default Polygon\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface RectangleProps {\n  bounds: {\n    sw: LatLng\n    ne: LatLng\n  }\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Rectangle) => void\n}\n\n/**\n * Map 상에 사각형을 그립니다.\n */\nconst Rectangle: React.FC<RectangleProps> = ({\n  bounds,\n  onClick,\n  onMousedown,\n  onMousemove,\n  onMouseout,\n  onMouseover,\n  onCreate,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  fillColor,\n  fillOpacity,\n  zIndex,\n}) => {\n  const map = useMap(`Rectangle`)\n\n  const rectangleBounds = useMemo(() => {\n    return new kakao.maps.LatLngBounds(\n      new kakao.maps.LatLng(bounds.sw.lat, bounds.sw.lng),\n      new kakao.maps.LatLng(bounds.ne.lat, bounds.ne.lng)\n    )\n  }, [bounds])\n\n  const rectangle = useMemo(() => {\n    return new kakao.maps.Rectangle({\n      bounds: rectangleBounds,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    rectangle.setMap(map)\n    return () => rectangle.setMap(null)\n  }, [map, rectangle])\n\n  useEffect(() => {\n    if (onCreate) onCreate(rectangle)\n  }, [rectangle, onCreate])\n\n  useEffect(() => {\n    rectangle.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    rectangle,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useEffect(() => {\n    rectangle.setBounds(rectangleBounds)\n  }, [rectangle, rectangleBounds])\n\n  useEffect(() => {\n    if (zIndex) rectangle.setZIndex(zIndex)\n  }, [rectangle, zIndex])\n\n  useKakaoEvent(rectangle, \"mouseover\", onMouseover)\n  useKakaoEvent(rectangle, \"mouseout\", onMouseout)\n  useKakaoEvent(rectangle, \"mousemove\", onMousemove)\n  useKakaoEvent(rectangle, \"mousedown\", onMousedown)\n  useKakaoEvent(rectangle, \"click\", onClick)\n\n  return null\n}\n\nexport default Rectangle\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface EllipseProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 미터 단위의 x축 반지름\n   */\n  rx: number\n\n  /**\n   * 미터 단위의 y축 반지름\n   */\n  ry: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n\n  /**\n   * 타원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 타원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 타원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Ellipse) => void\n}\n\n/**\n * Map 상에 타원을 그립니다.\n */\nconst Ellipse: React.FC<EllipseProps> = ({\n  center,\n  rx,\n  ry,\n  fillColor,\n  fillOpacity,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  zIndex,\n  onMouseover,\n  onMouseout,\n  onMousemove,\n  onMousedown,\n  onClick,\n  onCreate,\n}) => {\n  const map = useMap(`Ellipse`)\n\n  const ellipseCenter = useMemo(() => {\n    return new kakao.maps.LatLng(center.lat, center.lng)\n  }, [center.lat, center.lng])\n\n  const ellipse = useMemo(() => {\n    return new kakao.maps.Ellipse({\n      center: ellipseCenter,\n      rx,\n      ry,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    ellipse.setMap(map)\n\n    return () => {\n      ellipse.setMap(null)\n    }\n  }, [map, ellipse])\n\n  useEffect(() => {\n    if (onCreate) onCreate(ellipse)\n  }, [ellipse, onCreate])\n\n  useEffect(() => {\n    if (ellipse) ellipse.setPosition(ellipseCenter)\n  }, [ellipse, ellipseCenter])\n\n  useEffect(() => {\n    ellipse.setRadius(rx, ry)\n  }, [ellipse, rx, ry])\n\n  useEffect(() => {\n    if (!zIndex) return\n    ellipse.setZIndex(zIndex)\n  }, [ellipse, zIndex])\n\n  useEffect(() => {\n    ellipse.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    ellipse,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useKakaoEvent(ellipse, \"mouseover\", onMouseover)\n  useKakaoEvent(ellipse, \"mouseout\", onMouseout)\n  useKakaoEvent(ellipse, \"mousemove\", onMousemove)\n  useKakaoEvent(ellipse, \"mousedown\", onMousedown)\n  useKakaoEvent(ellipse, \"click\", onClick)\n\n  return null\n}\n\nexport default Ellipse\n","import React, { useEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface AbstractOverlayProps {\n  /**\n   * AbstractOverlay에서 필요한 `onAdd` 함수를 구현 합니다.\n   * 위치를 재조정할 필요가 있을 때 호출된다.\n   * 이 함수 내에서 엘리먼트의 위치를 잡아주어야 한다.\n   *\n   * 이때 arrow 함수가 아닌 일반 funtion으로 하여 this 바인딩이 되도록 하여 AbstractOverlay를 상속 받은 객체에 접근하여 필요 기능을 정의 합니다.\n   * ```tsx\n   * const panel = (this as kakao.maps.AbstractOverlay).getPanels().overlayLayer\n   * panel.appendChild(node.current)\n   * ```\n   */\n  draw: () => void\n  /**\n   * 지도에 올릴 때 호출된다.\n   * setMap(map) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 생성된 `DOM` 객체를 MapPanels에 자식 노드로 넣어주도록 한다.\n   *\n   * ```tsx\n   * var projection = this.getProjection()\n   * var point = projection.pointFromCoords(positionLatlng)\n   * var width = node.current.offsetWidth\n   * var height = node.current.offsetHeight\n   *\n   * console.log(point, width, height)\n   *\n   * node.current.style.left = point.x - width / 2 + \"px\"\n   * node.current.style.top = point.y - height / 2 + \"px\"\n   * ```\n   */\n  onAdd: () => void\n\n  /**\n   * 지도에서 제거할 때 호출된다.\n   * setMap(null) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 MapPanels에 자식 노드로 넣어준 엘리먼트를 제거하도록 한다.\n   *\n   * ```tsx\n   * this.node.parentNode.removeChild(this.node);\n   * ```\n   */\n  onRemove: () => void\n\n  /**\n   * 생성된 kakao.maps.AbstractOverlay 객체를 받을 수 있는 CallBack 함수 입니다.\n   */\n  onCreate?: (target: kakao.maps.AbstractOverlay) => void\n}\n\n/**\n * `API` 사용자가 직접 정의할 수 있는 오버레이.\n * AbstractOverlay를 상속 받아 사용할 객체를 생성하고 prototype을 연결해 준다.\n * 온전히 동작하는 오버레이를 만들고자 한다면 3가지 인터페이스 메소드( onAdd, draw, onRemove )를 구현해야 한다.\n *\n * 해당 Component 내부에서 `ReactAbstractOveraly` class를 만들어 `onAdd`, `draw`, `onRemove` 를 연결한 후 React Life Cycle에 맞춰 `setMap` 를 자동으로 호출 합니다.\n *\n * *경고* `draw`, `onAdd`, `onRemove` 의 경우 반드시 익명함수가 **아닌** 형태로 만들어서 전달해야 합니다.\n * `this.~` 를 통한 접근이 가능하니 해당 부분을 이용해서 구현 해주세요!\n *\n * ### Example Code\n *\n * ```jsx live\n * function () {\n *  const TooltipMarker = ({\n *    position,\n *  }) => {\n *    const node = useRef(document.createElement(\"div\"))\n *\n *    const positionLatlng = useMemo(() => {\n *      return new kakao.maps.LatLng(position.lat, position.lng)\n *    }, [position.lat, position.lng])\n *\n *    function onAdd() {\n *      const panel = this.getPanels()\n *        .overlayLayer\n *      panel.appendChild(node.current)\n *    }\n *\n *    function onRemove() {\n *      node.current.parentNode.removeChild(node.current)\n *    }\n *\n *    function draw() {\n *      var projection = this.getProjection()\n *      var point = projection.pointFromCoords(positionLatlng)\n *      var width = node.current.offsetWidth\n *      var height = node.current.offsetHeight\n *\n *      console.log(point, width, height)\n *\n *      node.current.style.left = point.x - width / 2 + \"px\"\n *      node.current.style.top = point.y - height / 2 + \"px\"\n *    }\n *\n *    useEffect(() => {\n *      node.current.style.position = \"absolute\"\n *      node.current.style.whiteSpace = \"nowrap\"\n *    }, [])\n *\n *    return (\n *      <>\n *        <AbstractOverlay onAdd={onAdd} onRemove={onRemove} draw={draw} />\n *        {ReactDOM.createPortal(\n *          <div\n *            style={{\n *              color: \"#000\",\n *              backgroundColor: \"#fff\",\n *              padding: \"5px\",\n *              borderRadius: \"15px\",\n *            }}\n *          >\n *            Hello Marker!\n *          </div>,\n *          node.current\n *        )}\n *      </>\n *    )\n *  }\n *\n *  return (\n *    <>\n *      <Map // 지도를 표시할 Container\n *        center={{\n *          // 지도의 중심좌표\n *          lat: 37.54699,\n *          lng: 127.09598,\n *        }}\n *        style={{\n *          // 지도의 크기\n *          width: \"100%\",\n *          height: \"450px\",\n *        }}\n *        level={3} // 지도의 확대 레벨\n *      >\n *        <TooltipMarker\n *          position={{\n *            lat: 37.54699,\n *            lng: 127.09598,\n *          }}\n *        />\n *      </Map>\n *    </>\n *  )\n *}\n * ```\n */\nconst AbstractOverlay: React.FC<AbstractOverlayProps> = ({\n  draw,\n  onAdd,\n  onRemove,\n  onCreate,\n}) => {\n  const map = useMap()\n\n  const reactAbstractOverlay = useMemo(() => {\n    class ReactAbstractOveraly extends kakao.maps.AbstractOverlay {\n      constructor(draw: () => void, onAdd: () => void, onRemove: () => void) {\n        super()\n        this.draw = draw\n        this.onAdd = onAdd\n        this.onRemove = onRemove\n      }\n    }\n    const overlay = new ReactAbstractOveraly(draw, onAdd, onRemove)\n    return overlay\n  }, [draw, onAdd, onRemove])\n\n  useEffect(() => {\n    reactAbstractOverlay.setMap(map)\n\n    return () => {\n      reactAbstractOverlay.setMap(null)\n    }\n  }, [map, reactAbstractOverlay])\n\n  useEffect(() => {\n    if (onCreate) onCreate(reactAbstractOverlay)\n  }, [reactAbstractOverlay, onCreate])\n  return null\n}\n\nexport default AbstractOverlay\n","import React, { useEffect, useRef, useState } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\n\nexport const KakaoRoadviewContext = React.createContext<kakao.maps.Roadview>(\n  undefined as unknown as kakao.maps.Roadview\n)\n\nexport interface RoadviewProps {\n  /**\n   * roadviewContinaer의 id에 대해서 지정합니다.\n   *\n   * @default  \"kakao-roadview-container\"\n   */\n  id?: string\n\n  /**\n   * roadviewContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * roadviewContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   * 해당 lat와 lng에 해당하는 radius범위 안에서 가장가까운 Roadview을 선택합니다.\n   * 만약 없다면 lat, lng로 설정 됩니다.\n   */\n  position: {\n    lat: number\n    lng: number\n    radius: number\n  }\n\n  /**\n   * 로드뷰 시작 지역의 고유 아이디 값.\n   */\n  panoId?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수평 좌표값.\n   */\n  panoX?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수직 좌표값.\n   */\n  panoY?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수평 각. 0이 정북방향. (0_360)\n   */\n  pan?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수직 각.(-90_90)\n   */\n  tilt?: number\n\n  /**\n   * 로드뷰 줌 초기값.(-3_3)\n   */\n  zoom?: number\n\n  /**\n   * 로드뷰 생성후 해당 객체를 전달하는 callback.\n   */\n  onCreate?: (roadview: kakao.maps.Roadview) => void\n\n  /**\n   * 로드뷰가 초기화를 끝내면 발생한다.\n   */\n  onInit?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 파노라마 ID가 바뀌면 발생한다.\n   */\n  onPanoidChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 시점이 바뀌면 발생한다.\n   */\n  onViewpointChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 지도 좌표가 바뀌면 발생한다.\n   */\n  onPositionChanged?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * getNearestPanoId 동작 실패시 호출 합니다.\n   */\n  onErrorGetNearestPanoId?: (target: kakao.maps.Roadview) => void\n}\n\n/**\n * Roadview를 Roadview를 생성하는 컴포넌트 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 반환 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `Roadview` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst Roadview: React.FC<RoadviewProps> = ({\n  id = \"kakao-roadview-container\",\n  style,\n  children,\n  position,\n  className,\n  pan,\n  panoId,\n  panoX,\n  panoY,\n  tilt,\n  zoom,\n  onCreate,\n  onInit,\n  onPanoidChange,\n  onPositionChanged,\n  onViewpointChange,\n  onErrorGetNearestPanoId,\n}) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [roadview, setRoadview] = useState<kakao.maps.Roadview>()\n  const container = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!window.kakao) {\n      console.warn(\n        \"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\"\n      )\n      return\n    }\n    if (!container.current) return\n\n    const kakaoRoadview = new kakao.maps.Roadview(container.current, {\n      pan: pan,\n      panoId: panoId,\n      panoX: panoX,\n      panoY: panoY,\n      tilt: tilt,\n      zoom: zoom,\n    })\n\n    setRoadview(kakaoRoadview)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [panoX, panoY, zoom])\n\n  useEffect(() => {\n    if (!roadview || !onCreate) return\n    onCreate(roadview)\n  }, [roadview, onCreate])\n\n  useEffect(() => {\n    if (\n      !roadview ||\n      panoId ||\n      (roadview.getPosition().getLat() === position.lat &&\n        roadview.getPosition().getLng() === position.lng)\n    )\n      return\n\n    const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n\n    new kakao.maps.RoadviewClient().getNearestPanoId(\n      newPostion,\n      position.radius,\n      (panoId) => {\n        if (panoId === null && onErrorGetNearestPanoId) {\n          onErrorGetNearestPanoId(roadview)\n        } else {\n          roadview.setPanoId(panoId, newPostion)\n        }\n      }\n    )\n  }, [\n    roadview,\n    panoId,\n    position.lat,\n    position.lng,\n    position.radius,\n    onErrorGetNearestPanoId,\n  ])\n\n  useEffect(() => {\n    if (\n      !roadview ||\n      !panoId ||\n      panoId === roadview.getPanoId() ||\n      (roadview.getPosition().getLat() === position.lat &&\n        roadview.getPosition().getLng() === position.lng)\n    )\n      return\n\n    const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n    roadview.setPanoId(panoId, newPostion)\n  }, [roadview, panoId, position.lat, position.lng])\n\n  useEffect(() => {\n    if (!roadview) return\n\n    const prevViewpoint = roadview.getViewpoint()\n\n    if (prevViewpoint.pan === pan && prevViewpoint.tilt === tilt) return\n\n    if (pan) prevViewpoint.pan = pan\n    if (tilt) prevViewpoint.tilt = tilt\n    roadview.setViewpoint(prevViewpoint)\n  }, [roadview, pan, tilt])\n\n  useKakaoEvent(roadview, \"init\", (target) => {\n    setIsLoading(false)\n    if (onInit) onInit(target)\n  })\n  useKakaoEvent(roadview, \"panoid_changed\", onPanoidChange)\n  useKakaoEvent(roadview, \"viewpoint_changed\", onViewpointChange)\n  useKakaoEvent(roadview, \"position_changed\", onPositionChanged)\n\n  return (\n    <>\n      <div id={id} className={className} style={style} ref={container}></div>\n      {roadview && !isLoading && (\n        <KakaoRoadviewContext.Provider value={roadview}>\n          {children}\n        </KakaoRoadviewContext.Provider>\n      )}\n    </>\n  )\n}\n\nexport default Roadview\n","import { useContext } from \"react\"\nimport { KakaoRoadviewContext } from \"../components/Roadview\"\n\n/**\n * kakao roadview 객체를 가져오는 hook 입니다.\n * Roadview 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useRoadview = (componentName?: string) => {\n  const kakaoRoadview = useContext(KakaoRoadviewContext)\n  if (!kakaoRoadview) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useRoadview\"\n      } must exist inside Roadview Component!`\n    )\n  }\n\n  return kakaoRoadview\n}\n\nexport default useRoadview\n","import React, { useEffect, useMemo, useRef } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface CustomOverlayRoadviewProps {\n  /**\n   * CustomOverlay의 Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * CustomOverlay의 Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * CustomOverlay의 Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n  /**\n   * 해당 객체 생성 후 Roadview의 시점을 전환하여 Focus 할 지에 대해서 정의 합니다.\n   */\n  isFocus?: boolean\n\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰상에서 커스텀 오버레이의 높이(위치)를 지정한다.\n   * 단위는 m(미터)이며 현재 로드뷰의 바닥 높이를 기준으로 떨어져있는 높이를 말한다.\n   */\n  altitude?: number\n\n  /**\n   * 커스텀 오버레이의 가시반경을 설정한다.\n   * 로드뷰의 위치와 커스텀 오버레이의 위치 사이의 거리가 가시반경 이내일 경우에만 로드뷰상에 노출된다.\n   * 단위는 m(미터)이며 기본값은 500m이다.\n   */\n  range?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Roadview에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 함수를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayRoadview: React.FC<CustomOverlayRoadviewProps> = ({\n  id,\n  className,\n  style,\n  position,\n  children,\n  clickable,\n  xAnchor,\n  yAnchor,\n  zIndex,\n  altitude,\n  range,\n  isFocus,\n  onCreate,\n}) => {\n  const roadview = useRoadview(`CustomOverlayRoadview`)\n  const container = useRef(document.createElement(\"div\"))\n\n  const overlayPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }\n    return new kakao.maps.Viewpoint(\n      position.pan,\n      position.tilt,\n      position.zoom,\n      position.panoId\n    )\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [\n    // @ts-ignore\n    position.lat,\n    // @ts-ignore\n    position.lng,\n    // @ts-ignore\n    position.pan,\n    // @ts-ignore\n    position.tilt,\n    // @ts-ignore\n    position.zoom,\n    // @ts-ignore\n    position.panoId,\n  ])\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const overlay = useMemo(() => {\n    const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n      clickable: clickable,\n      xAnchor: xAnchor,\n      yAnchor: yAnchor,\n      zIndex: zIndex,\n      position: overlayPosition,\n      content: container.current,\n    })\n\n    return KakaoCustomOverlay\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickable, xAnchor, yAnchor])\n\n  useEffect(() => {\n    if (!roadview) return\n\n    overlay.setMap(roadview)\n\n    if (isFocus) {\n      const projection = roadview.getProjection() // viewpoint(화면좌표)값을 추출할 수 있는 projection 객체를 가져옵니다.\n\n      // 커스텀오버레이의 position과 altitude값을 통해 viewpoint값(화면좌표)를 추출합니다.\n      const viewpoint = projection.viewpointFromCoords(\n        overlay.getPosition(),\n        overlay.getAltitude()\n      )\n      roadview.setViewpoint(viewpoint) //커스텀 오버레이를 로드뷰의 가운데에 오도록 로드뷰의 시점을 변화 시킵니다.\n    }\n\n    return () => {\n      overlay.setMap(null)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [overlay, roadview])\n\n  useEffect(() => {\n    if (onCreate) onCreate(overlay)\n  }, [overlay, onCreate])\n\n  useEffect(() => {\n    overlay.setPosition(overlayPosition)\n  }, [overlay, overlayPosition])\n\n  useEffect(() => {\n    if (!zIndex) return\n    overlay.setZIndex(zIndex)\n  }, [overlay, zIndex])\n\n  useEffect(() => {\n    if (!altitude) return\n    overlay.setAltitude(altitude)\n  }, [overlay, altitude])\n\n  useEffect(() => {\n    if (!range) return\n    overlay.setRange(range)\n  }, [overlay, range])\n\n  useEffect(() => {\n    if (id) container.current.id = id\n  }, [id])\n\n  useEffect(() => {\n    if (className) container.current.className = className\n  }, [className])\n\n  useEffect(() => {\n    if (style) {\n      for (const [key, value] of Object.entries(style)) {\n        container.current.style[key] = value\n      }\n    }\n  }, [style])\n\n  return ReactDOM.createPortal(children, container.current)\n}\n\nexport default CustomOverlayRoadview\n","import React, { useMemo } from \"react\"\nimport useRoadview from \"../hooks/useRoadview\"\nimport Marker from \"./Marker\"\n\nexport interface RoadviewMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * Contianer id에 대해서 지정합니다.\n     */\n    id?: string\n\n    /**\n     * Contianer className에 대해서 지정합니다.\n     */\n    className?: string\n\n    /**\n     * Contianer style에 대해서 지정합니다.\n     */\n    style?: React.CSSProperties\n\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewMarker: React.FC<RoadviewMarkerProps> = ({\n  image,\n  position,\n  children,\n  altitude,\n  clickable,\n  infoWindowOptions,\n  onClick,\n  onDragEnd,\n  onDragStart,\n  onMouseOut,\n  onMouseOver,\n  onCreate,\n  opacity,\n  range,\n  title,\n  zIndex,\n}) => {\n  const roadview = useRoadview(`RoadviewMarker`)\n\n  const markerImage = useMemo(() => {\n    return (\n      image &&\n      new kakao.maps.MarkerImage(\n        image.src,\n        new kakao.maps.Size(image.size.width, image.size.height),\n        {\n          alt: image.options?.alt,\n          coords: image.options?.coords,\n          offset:\n            image.options?.offset &&\n            new kakao.maps.Point(\n              image.options?.offset.x,\n              image.options?.offset.y\n            ),\n          shape: image.options?.shape,\n          spriteOrigin:\n            image.options?.spriteOrigin &&\n            new kakao.maps.Point(\n              image.options?.spriteOrigin.x,\n              image.options?.spriteOrigin.y\n            ),\n          spriteSize:\n            image.options?.spriteSize &&\n            new kakao.maps.Size(\n              image.options?.spriteSize.width,\n              image.options?.spriteSize.height\n            ),\n        }\n      )\n    )\n  }, [image])\n\n  const markerPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }\n    if (\"x\" in position) {\n      return new kakao.maps.Coords(position.x, position.y).toLatLng()\n    }\n    return new kakao.maps.Viewpoint(\n      position.pan,\n      position.tilt,\n      position.zoom,\n      position.panoId\n    )\n\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [\n    // @ts-ignore\n    position.lat,\n    // @ts-ignore\n    position.lng,\n    // @ts-ignore\n    position.x,\n    // @ts-ignore\n    position.y,\n    // @ts-ignore\n    position.pan,\n    // @ts-ignore\n    position.tilt,\n    // @ts-ignore\n    position.zoom,\n    // @ts-ignore\n    position?.panoId,\n  ])\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return (\n    <Marker\n      map={roadview}\n      position={markerPosition}\n      image={markerImage}\n      altitude={altitude}\n      clickable={clickable}\n      infoWindowOptions={infoWindowOptions}\n      onClick={onClick}\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      onMouseOut={onMouseOut}\n      onMouseOver={onMouseOver}\n      onCreate={onCreate}\n      opacity={opacity}\n      range={range}\n      title={title}\n      zIndex={zIndex}\n    >\n      {children}\n    </Marker>\n  )\n}\n\nexport default RoadviewMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface RoadviewInfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewInfoWindow: React.FC<RoadviewInfoWindowProps> = ({\n  id,\n  className,\n  style,\n  position,\n  children,\n  altitude,\n  disableAutoPan,\n  range,\n  removable,\n  zIndex,\n  onCreate,\n}) => {\n  const roadview = useRoadview(`RoadviewInfoWindow`)\n  const infoPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }\n    return new kakao.maps.Viewpoint(\n      position.pan,\n      position.tilt,\n      position.zoom,\n      position.panoId\n    )\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [\n    // @ts-ignore\n    position.lat,\n    // @ts-ignore\n    position.lng,\n    // @ts-ignore\n    position.pan,\n    // @ts-ignore\n    position.tilt,\n    // @ts-ignore\n    position.zoom,\n    // @ts-ignore\n    position.panoId,\n  ])\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return (\n    <InfoWindow\n      id={id}\n      className={className}\n      style={style}\n      altitude={altitude}\n      disableAutoPan={disableAutoPan}\n      range={range}\n      removable={removable}\n      zIndex={zIndex}\n      map={roadview}\n      position={infoPosition}\n      onCreate={onCreate}\n    >\n      {children}\n    </InfoWindow>\n  )\n}\n\nexport default RoadviewInfoWindow\n"]},"metadata":{},"sourceType":"module"}